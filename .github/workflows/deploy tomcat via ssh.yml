name: CI/CD Pipeline

on:
  push:
    branches:
      - Prod

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create application-test.yml
      run: |
        mkdir -p src/main/resources
        echo -e "${{ secrets.APPLICATION_TEST_YML }}" > src/main/resources/application-test.yml

    - name: Verify application-test.yml
      run: |
        ls -lah src/main/resources
        cat src/main/resources/application-test.yml
  
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run tests with Maven
      run: mvn test

  build:
    runs-on: ubuntu-latest
    needs: test  # test 성공 후 실행됨

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Create application.yml
      run: |
        mkdir -p src/main/resources
        echo -e "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml

    - name: Verify application.yml
      run: |
        ls -lah src/main/resources
        cat src/main/resources/application.yml

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven (Skip Tests)
      run: mvn clean package -Dmaven.test.skip=true

    - name: Rename WAR file to app.war
      run: mv target/*.war target/app.war

    - name: Upload WAR file as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-war
        path: target/app.war

  deploy:
    runs-on: ubuntu-latest
    needs: build  # build 단계 성공 후 실행됨

    steps:
    - name: Download WAR file from build job
      uses: actions/download-artifact@v4
      with:
        name: app-war
        path: .

    - name: Upload WAR file to Server via SCP
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        port: 21
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        source: "app.war"
        target: "/opt/tomcat/webapps"
        overwrite: true
